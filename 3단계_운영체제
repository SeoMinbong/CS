1. 운영체제란 무엇인가?	
	가. 운영체제의 구성요소		
	나. 운영체제의 종류		
	다. 운영체제의 발전과정	
		1. 1940년대와 1950년대	
		2. 1960년대	
		3. 1970년대	
		4. 1980년대	
		5. 1990년대	
		6. 2000년대와 그 이후	
	라. 입출력 장치의 발전
추세		
2. 컴퓨터 시스템의 구성	
	가. 하드웨어	
		1. 기억장치 인터리빙	
		2. 재배치 레지스터	
		3. 인터럽트와 폴링	
		4. 버퍼링	
		5. 보조기억장치	
		6. 입출력 채널	
		7. 사이클 스탈링	
		8. 주소 계산방식	
		9. 가상기억장치	
		10. 직접기억장치 접근	
		1
		1. 기억장치 계층구조	
		12. RISC와 CISC의 개념	
	나. 소프트웨어	
		1. 기계어 프로그래밍	
		2. 입출력 제어 시스템	
		3. 스풀링	
		4. 컴파일러와 인터프리터	
		5. 절대 로더와 재배치 로더	
		6. 링킹 로더와 링키지 
에디터	
		7. 객체지향 운영체제	
	다. 펌웨어	
		1. 에뮬레이션	
		2. 마이크로 다이어그노스틱스	
	라. 마이크로 커널		
3. 주기억장치 관리	
	가. 기억장치의 구성		
	나. 기억장치 관리기법		
	다. 단일 사용자 연속기억장치 할당		
	라. 고정분할 다중 프로그래밍	
		1. 절대번역과 적재	
		2. 재배치가능 번역과 적재	
		3. 시스템의 보호와 단편화	
	마. 동적분할 다중 프로그래밍	
		1. 기억장치의 통합과 집약	
		2. 기억장치 배치기법	
	바. 기억장치 교체		
4. 가상기억장치의 구성	
	가. 가상기억장치의 개념		
	나. 블록사상		
	다. 페이징 기법	
		1. 직접사상에 의한 페이징 
기법	
		2. 연관사상에 의한 페이징 
기법	
		3. 연관/직접사상에 의한 
페이징 기법	
	라. 세그먼테이션 기법	
		1. 세그먼트 기법에서의 
엑세스 제어	
		2. 직접사상에 의한 세그
먼테이션 기법	
	마. 페이징/세그먼테이션 
혼용기법		
5. 가상기억장치의 관리	
	가. 페이지 호출기법	
		1. 요구 페이지 호출기법	
		2. 예상 페이지 호출기법	
	나. 페이지 교체기법	
		1. 최적화 원칙	
		2. 무작위 페이지 교체	
		3. FIFO페이지 교체	
		4. LRU 페이지 교체기법	
		5. LFU 페이지 교체기법	
		6. NUR 페이지 교체기법	
		7. 클록 페이지 교체기법과2차 기회 페이지 교체기법	
	다. 국부성		
	라. 워킹세트		
	마. PFF 페이지 교체		
	바. 페이지 크기		
	사. 페이징 기법 하에서의 
프로그램 동작		
6. 프로세서 관리	
	가. 프로세스의 개념		
	나. 작업 스케줄러와 프로세스 스케줄러	
		1. 프로세스 스케줄러	
		2. 작업과 프로세스 상태	
		3. 프로세스 제어블록	
		4. 프로세스간의 관계	
		5. 프로세스에 대한 연산	
		6. 프로세스와 스레드의 
관계	
	다. 스케줄링 단계		
	라. 스케줄링 정책		
	마. 스케줄링 알고리즘	
		1. 기한부 스케줄링	
		2. 우선순위 스케줄링 알고리즘	
		3. FCFS 스케줄링 알고리즘	
		4. SJF 스케줄링 알고리즘	
		5. SRT 스케줄링 알고리즘	
		6. 라운드 로빈 스케줄링 알고리즘	
		7. HRN 스케줄링	
		8. FSS 스케줄링	
		9. 다단계 피드백 큐 스케줄링	
7. 병행 프로세스	
	가. 단일 프로세스 내의 병행수행	
		1. 우선순위 그래프	
		2. Fork Join 구조	
		3. 병행문	
	나. 멀티프로세싱 환경	
		1. Master/Slave 환경	
		2. 연식결합 시스템과 경식결합 시스템	
		3. 대칭 다중처리 구조	
	다. 비동기 병행 프로세스		
	라. 동기화 임계구역	
		1. Test-and-set	
		2. 세마포어	
		3. 시간종속 오류	
	마. 프로세스의 상호협력	
		1. 생산자 소비자 문제	
		2. 판독기/기록기 문제	
	바. 병행 프로그래밍 언어	
		1. Ada	
		2. CSP	
	사. 프로세스간의 통신	
		1. 직접통신	
		2. 간접통신	
		3. 우편함의 소유권	
		4. 버퍼링	
		5. 예외조건	
8. 교착상태	
	가. 시스템의 개념과 모델		
	나. 교착상태 특성	
		1. 교착상태의 필수조건	
		2. 자원할당 그래프	
	다. 교착상태 방지	
		1. 상호배제조건의 방지	
		2. 대기조건의 방지	
		3. 비중단조건의 방지	
		4. 환형 대기조건의 방지	
	라. 교착상태 회피	
		1. 단일 유형의 여러 자원이 존재하는 경우	
		2. 각 유형의 자원이 한 개 뿐일 경우	
	마. 교착상태 탐지	
		1. 각 자원의 유형이 여러 개일 경우	
		2. 모든 자원 유형이 한 개 뿐일 경우	
		3. 교착상태 탐지 알고리즘의 이용	
	바. 교착상태 복구	
		1. 프로세스 종료	
		2. 자원 선점	
	사. 교착상태 처리의 복합적 접근방법		
9. 장치관리	
	가. 장치의 구분		
	나. 순차접근 저장장치		
	다. 직접접근 저장장치	
		1. 직접접근 저장장치의 
종류	
		2. 접근시간	
	라. 디스크 스케줄링	
		1. 디스크 스케줄링의 개념	
		2. FCFS 스케줄링	
		3. SSTF 스케줄링	
		4. SCAN 스케줄링	
		5. N-Step SCAN 스케줄링	
		6. C-SCAN 스케줄링	
		7. C-LOOK 스케줄링	
		8. SLTF 스케줄링	
	마. 디스크 캐싱		
	바. RAM 디스크		
10. 파일관리 시스템	
	가. 파일관리 시스템의 요소		
	나. 파일관리 시스템의 기능		
	다. 불록킹과 버퍼링		
	라. 파일구조와 접근방식		
	마. 디스크 공간할당	
		1. 연속할당	
		2. 불연속할당	
	바. 파일 서술자와 파일이름		
	사. 접근제어의 종류	
		1. 접근제어행렬	
		2. 사용자 집단별 접근제어	
	아. 파일의 백업과 복구		
	자. 파일서버와 분산파일 시스템		
	차. 데이터 압축		
1
		1. UNIX 운영체제	
	가. UNIX의 특징		
	나. UNIX의 역사		
	다. UNIX의 구조		
	라. UNIX의 주기억장치 
관리		
	마. UNIX의 프로세서 관리	
		1. 프로세서 관리자의 기능	
		2. 프로세스 표와 사용자 표	
	바. UNIX의 장치관리	
		1. 장치 드라이버	
		2. UNIX의 장치분류	
	사. UNIX의 파일관리	
		1. 파일의 형태와 구성	
		2. 파일이름	
		3. 파일 디렉토리	
		4. 파일접근 자료구조	
	아. 사용자 인터페이스	5. 기본적인 명령어	
		6. 리디렉션	
		7. 파이프라인	
		8. 필터	
12. Linux 운영체제	
	가. Linux의 발전과정		
	나. Linux의 특징		
	다. 소프트웨어 특징	
		1. 텍스트 프로세싱과 워드프로세싱	
		2. 프로그래밍 언어와 유틸리티	
		3. Linux의 네트워킹	
		4. 월드 와이드 웹	
	라. 파일 디렉토리		
	마. 시스템 요구사항		
	바. 사용자 인터페이스		
	사. Linux  사용의 시작	
		1. 계정의 생성	
		2. 로그인	
		3. 가상콘솔	
		4. 로그아웃	
	아. Linux의 문제점		

시험 문제 예시 


		1. 다음 <보기>중 세마포어와 관련 없는 하나는? 


ㄱ. 상호배재를 위해 사용한다.        ㄴ.  P, V 동작(operation)을 사용한다.
ㄷ. 임계영역을 보호한다.             ㄹ. 경쟁상태(race condition)을 발생시킨다.
① ㄱ               ② ㄴ              ③ ㄷ                  ④ ㄹ 
[정답] ④ 

2. 다음 <보기>중 교착상태(deadlock)가 발생하였을 때, 성립하는 조건 4가지에 포함되지 않은 것은? 


ㄱ. mutual exclusion          ㄴ. critical section 
ㄷ. hold-and-wait            ㄹ. circular wait 
ㅁ. busy-wait                ㅂ. no preemption
① ㄱ, ㄷ            ② ㄴ, ㅁ          ③ ㄹ, ㅂ             ④ ㅁ, ㅂ 
[정답] ② 

3. 실행 시간이 두 시간씩 소요되는 세 개의 작업이 동시에 제출되었고, 이를 FCFS(First Come First Service)정책을 사용하여 스케줄링하였을 때, 평균 작업 시간은? 
① 2시간 반         ② 3시간          ③ 3시간 반           ④ 4시간 
 [정답] ④ ( 2 + 4 + 6 ) / 3 = 4 (시간)

4. 가상기억장치의 특성에 대한 설명으로 옳은 것은? 
① 프로그램내에서 사용되는 주소(address)는 실기억장치의 주소와 일치하지 않는다 
② 실행중인 모든 프로그램은 항상 실기억장치 내에 존재해야 한다. 
③ 한 프로그램의 크기가 실기억장치의 크기보다 크면 실행될 수 없다 
④ 프로그램이 실행될 때 항상 실기억장치 내에 연속적으로 배치된다 
[정답] ① 

5. 다음 중 가상기억장치 대체(replacement) 전략이 아닌 것은? 
① LRU(Least Recently Used)           ② NRU(Not Recently Used) 
③ Best-Fit                            ④ FIFO(First-In First-Out) 
 [정답] ③ 
6. 다중 프로그래밍 시스템과 시분할 처리 시스템은 모두 다수의 사용자에게 서비스를 제공한다. 이에 대한 설명으로 가장 적절한 것은?
① 다중 프로그래밍과 시분할 처리 모두 실행시간이 긴 작업에 유리하다. 
② 다중 프로그래밍은 처리량의 극대화를, 시분할 처리는 응답시간의 최소화를 꾀한다.
③ 다중 프로그래밍과 시분할 처리는 모두 일정하게 나누어진 시간만큼을 작업에 할당 한다.
④ 다중 프로그래밍은 실행시간이 짧은 작업에 유리하고 시분할 처리는 실행시간이 긴 작업에 유리하다.
[정답] ②

7. 다중 프로그래밍에서 메모리 보호를 위해 사용하는 레지스터는?
①?경계 레지스터	                    ②?프로그램 카운터
③?범용 레지스터	                    ④?재배치 레지스터
 [정답]  ①

8. 페이지 교체 기법에서 가장 이상적인 최적의 기법은?
①?참조된 횟수가 가장 적은 페이지를 교체
②?주기억 장치에 가장 오래 있었던 페이지를 교체
③?후에 가장 오랫동안 사용되지 않을 페이지를 교체
④?가장 오랫동안 사용되지 않은 페이지를 선택하여 교체
[정답] ③

9. 가장 바람직한 스케줄링 정책은?
① 반환시간과 처리율을 늘린다. 
② 대기시간을 늘리고 반환시간을 줄인다.
③ 응답시간을 줄이고 CPU 이용률을 늘린다.
④ CPU 이용률을 줄이고 반환시간을 늘린다.
[정답] ③

10. <보기>는 페이지 부재를 처리하는 단계를 설명한 것이다. 순서대로 바르게 나열한 것은?
ㄱ. backing store에 있는 페이지를 물리적 메모리로 가져온다.
ㄴ. 명령어 수행을 계속한다.
ㄷ. 사용이 가능한 프레임을 프레임 리스트에서 찾는다.
ㄹ. 사용자 레지스터와 프로그램 상태를 저장한다
ㅁ. 페이지 테이블을 재조정한다.
ㅂ. 운영체제에 트랩을 요청한다.
①?ㄹ-ㅂ-ㄷ-ㄱ-ㄴ-ㅁ	             ②?ㄹ-ㄷ-ㅂ-ㄱ-ㅁ-ㄴ
③?ㅂ-ㄷ-ㄹ-ㄱ-ㄴ-ㅁ	             ④?ㅂ-ㄹ-ㄷ-ㄱ-ㄴ-ㅁ
[정답] ④
1
		1. 다음은 P, V 세마포어에 대한 정의이다. ㉠, ㉡에 들어갈 알맞은 것은?

P(S):
  If (S>0) then
    (        ㉠       )
  else
    현재의 프로세스는 대기해야 한다.
V(S):
  If(1개 이상의 프로세스가 대기 중이면)
    그중 1개 프로세스만 진행한다.
  else
    (         ㉡      ) 
①?㉠ S=S+1 ㉡ S=S-1	             ②?㉠ S=0 ㉡ S=1  
③?㉠ S=S-1 ㉡ S=S+1	             ④?㉠ S=1 ㉡ S=0
[정답] ③


12. 파일의 회손 시 복구를 위한 방식들의 장단점 중 틀린 것은?
①?로그 저장 방식은 데이터가 파괴될 경우 현재까지 수행한 작업을 다시 처리하여 데이터를 복구한다.
②?주기적 백업을 행한 경우 데이터 파괴 시 시간은 걸리지만 파일의 갱신 내용을 완전히 복구할 수 있다.
③?로그 저장 방식은 시스템 구축비가 미러링 방식에 비해 적게 든다.
④?로그 저장 방식은 미러링 방식에 비해 복구 작업이 느리다.
[정답] ②


13. 교착상태(deadlock)를 처리하는 대표적인 3가지 방법을 들고 간략히 설명하시오. 
[정답] ① prevention : 교착상태를 유발하는 조건들이 성립되지 않게 사전에 이를 차단함으로써 절대로 교착상태가 발생하지 않게 하는 전략 
② avoidance : 자원할 당시 교착상태를 유발할지를 사전에 확인하고, 교착상태를 피할 수 없는 자원할당 방법이 있을 경우에만 자원을 할당해주는 전략 
③ detection and recovery : 자원요청이 들어올 때마다 일단 자원을 할당해주고 대신 주기적으로 교착상태가 발생했는지를 확인한 후, 만약 교착상태가 발생 하였다면 시스템의 상태를 회복하여 주는 전략 
14. 3개의 작업 수행 상태가 다음과 같을 때 비선점 SJF (Shortest Job First) 스케줄링으로 수행했을 때 평균 대기시간과 평균 반환시간을 구하시오.
작업명	도착 시간	작업 처리 시간
A	0	5
B	2	10
C	5	3
[정답]  평균대기시간 (0+6+0) / 3 = 2,  평균반환시간 (5+16+3) / 3 = 8

15. 다음에서 설명하고 있는 스케줄링 기법이 무엇인지 쓰시오.
ο 대화형 시스템에서 사용되는 선점적 스케줄링 방식
ο 프로세스들이 도착한 순서로 디스패칭되지만, CPU에서 제어하는 시간 할당량 혹은 시간 간격에 의해 제한을 받는다.
ο 시간 할당량을 매 작업에게 주고 할당된 시간 안에 완성하지 못한 프로세스는 준비 큐의 맨 뒤에 배치되도록 하여 CPU를 독점하지 않고 공평하게 이용할 수 있게한다.
[정답]  라운드 로빈(RR, Round Robin)

16. 프로세스는 실행될 준비가 되어 있지만, 다른 프로세스와의 경쟁에서 우선순위가 낮다는 이유 등으로 매번 자원을 할당 받지 못해서 작업을 완료할 수 없는 상황을 무엇이라고 하는지 쓰시오.
[정답] 기아상태(starvation)

